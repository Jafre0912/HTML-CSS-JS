//Execution context: whenever we make a function that fxn creates a new imaginary container that contains 
// variable, fxn inside parent fxn , and laxical enviromnent

//Lexical Environment : the features of inner fxn which can access the all the features of outer fxn but outer fxn can't access of it

function cookFood() {
    let rice = "Biryani";  // Variable (‡§∏‡§æ‡§Æ‡§æ‡§®)
    let masala = "Spices"; // Variable (‡§∏‡§æ‡§Æ‡§æ‡§®)
    
    function serveFood() { // Inner Function (‡§Ö‡§Ç‡§¶‡§∞ ‡§µ‡§æ‡§≤‡§æ ‡§ï‡•Å‡§ï)
        console.log("Serving " + rice);
    }
    
    serveFood(); // Function Call (‡§ñ‡§æ‡§®‡§æ ‡§™‡§∞‡•ã‡§∏‡§®‡§æ)
}

cookFood(); // ‡§ñ‡§æ‡§®‡§æ ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡§æ ‡§ë‡§∞‡•ç‡§°‡§∞


//üëâ Execution Context = ‡§è‡§ó‡•ã ‡§∞‡§∏‡•ã‡§à ‡§ò‡§∞, ‡§ú‡§π‡§µ‡§æ‡§Å ‡§π‡§∞ function ‡§ï‡•á ‡§Ü‡§™‡§® ‡§Ö‡§≤‡§ó-‡§Ö‡§≤‡§ó ‡§∏‡§æ‡§Æ‡§æ‡§® (variables, functions) ‡§∞‡§π‡•á‡§≤‡§æ!
//üëâ Lexical Environment = ‡§Ö‡§Ç‡§¶‡§∞ ‡§µ‡§æ‡§≤‡§æ function, ‡§¨‡§æ‡§π‡§∞ ‡§µ‡§æ‡§≤‡§æ function ‡§ï‡•á ‡§ö‡•Ä‡§ú ‡§¶‡•á‡§ñ ‡§∏‡§ï‡•á‡§≤‡§æ, ‡§≤‡•á‡§ï‡§ø‡§® ‡§¨‡§æ‡§π‡§∞ ‡§µ‡§æ‡§≤‡§æ ‡§Ö‡§Ç‡§¶‡§∞ ‡§µ‡§æ‡§≤‡§æ ‡§ï‡•á ‡§®‡§æ‡§π‡•Ä‡§Ç! isko hindi me likho 

//falsy value: (0, undefined, false,NaN, null, document.all)
//truthy value: except above falsy keyword all are the truthy value

if(-1){ //this keyword doesnot belongs to falsy value so it's true
    console.log("hey jafar alam how are you");
}
else{
    console.log("good");
}

if(0){
    console.log("truthy value hai");
}else{
    console.log("falsy value hai bcz this keyword lies in the falsy value that's why else part excuted");
}